{"version":3,"sources":["Pages/Navigation.js","Components/Cards/card.jsx","Components/Card-list/card-list.js","Components/Card-list/Shared/Dish.js","Components/SearchBox/Search-Box.js","Components/SLiderComponent/Slider.js","Pages/Home.js","Pages/ContactUS.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","margin","spacing","large","width","height","Navigation","classes","className","Avatar","alt","src","to","Card","props","monster","image","style","name","email","Cardslist","console","log","monsters","map","key","id","DISHES","category","label","price","description","SearchBox","placeholder","handleChange","type","onChange","SlideChangeHooks","position","left","top","border","images","url","React","Component","Home","state","searchField","this","filtermonster","filter","toLowerCase","includes","e","setState","target","value","ContactUs","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3b7c6dec.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../App.css';\r\nimport {Link} from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    large: {\r\n      width: theme.spacing(7),\r\n      height: theme.spacing(7),\r\n    },\r\n  }));\r\n\r\nexport const Navigation =()=>{\r\n    const classes = useStyles();\r\n    return(\r\n        <nav>\r\n            \r\n            <div className={classes.root}>\r\n      <Avatar alt=\"Remy Sharp\" src=\"images/Peace.jpeg\" className={classes.large} />\r\n    </div>\r\n\r\n            <ul className=\"nav-Link\">\r\n\r\n                <Link className=\"navstyle\" to=\"/\">\r\n                    <li> Home</li>\r\n                </Link>\r\n                <Link className=\"navstyle\"to=\"ContactUs\">\r\n                    <li> Contact US</li>\r\n                </Link>\r\n                <Link className=\"navstyle\"to=\"/About\">\r\n                    <li> About me</li>\r\n                </Link>\r\n            </ul>\r\n        </nav>\r\n    )\r\n};\r\n\r\n","import React from 'react'\r\nimport './Card-style.css'\r\nexport const Card=props=>(\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster\" src={props.monster.image} style={{width:200,height:300}} />\r\n        <h2>{props.monster.name}</h2>\r\n<p>{props.monster.email}</p>\r\n    </div>\r\n\r\n\r\n)","import React from 'react'\r\nimport {Card} from '../Cards/card'\r\nimport './cards-list-style.css'\r\n\r\nexport const Cardslist= props =>{\r\n  console.log(props)\r\nreturn (<div className=\"card-list\">\r\n\r\n     {props.monsters.map(monster=>(\r\n     <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    \r\n    </div>\r\n     )\r\n}","\r\nexport const DISHES =\r\n    [\r\n        {\r\n        id: 0,\r\n        name:'Cafe ',\r\n        image: 'images/Cafe.jpeg',\r\n        category: 'mains',\r\n        label:'Hot',\r\n        price:'4.99',\r\n        description:'A unique combination of Indian Uthappam (pancake) and Italian pizza, topped with Cerignola olives, ripe vine cherry tomatoes, Vidalia onion, Guntur chillies and Buffalo Paneer.',\r\n               },\r\n        {\r\n        id: 1,\r\n        name:'Cafe2',\r\n        image: 'images/cafe2.jpeg',\r\n        category: 'appetizer',\r\n        label:'',\r\n        price:'1.99',\r\n        description:'Deep fried Zucchini coated with mildly spiced Chickpea flour batter accompanied with a sweet-tangy tamarind sauce',\r\n        \r\n        },\r\n        {\r\n        id: 2,\r\n        name:'Cafe3',\r\n        image: 'images/cafe3.jpeg',\r\n        category: 'appetizer',\r\n        label:'New',\r\n        price:'1.99',\r\n        description:'A quintessential ConFusion experience, is it a vada or is it a donut?',\r\n        \r\n        },\r\n        {\r\n        id: 3,\r\n        name:'friendShip',\r\n        image: 'images/friendShip.jpeg',\r\n        category: 'dessert',\r\n        label:'',\r\n        price:'2.99',\r\n        description:'A delectable, semi-sweet New York Style Cheese Cake, with Graham cracker crust and spiced with Indian cardamoms',\r\n        \r\n        },\r\n        {\r\n            id: 4,\r\n            name:'Moonlight',\r\n            image: 'images/Moonlight.jpeg',\r\n            category: 'dessert',\r\n            label:'',\r\n            price:'2.99',\r\n            description:'A delectable, semi-sweet New York Style Cheese Cake, with Graham cracker crust and spiced with Indian cardamoms',\r\n            \r\n            },\r\n            {\r\n                id: 5,\r\n                name:'Peace',\r\n                image: 'images/Peace.jpeg',\r\n                category: 'dessert',\r\n                label:'',\r\n                price:'2.99',\r\n                description:'A delectable, semi-sweet New York Style Cheese Cake, with Graham cracker crust and spiced with Indian cardamoms',\r\n                \r\n                },\r\n                {\r\n                    id: 6,\r\n                    name:'Landscape',\r\n                    image: 'images/Landscape.jpeg',\r\n                    category: 'dessert',\r\n                    label:'',\r\n                    price:'2.99',\r\n                    description:'A delectable, semi-sweet New York Style Cheese Cake, with Graham cracker crust and spiced with Indian cardamoms',\r\n                    \r\n                    },\r\n                    {\r\n                        id: 7,\r\n                        name:'watchtower',\r\n                        image: 'images/watchtower.jpeg',\r\n                        category: 'dessert',\r\n                        label:'',\r\n                        price:'2.99',\r\n                        description:'A delectable, semi-sweet New York Style Cheese Cake, with Graham cracker crust and spiced with Indian cardamoms',\r\n                        \r\n                        },\r\n                        {\r\n                            id: 8,\r\n                            name:'jungle&NorthStar',\r\n                            image: 'images/jungle&NorthStar.jpeg',\r\n                            category: 'dessert',\r\n                            label:'',\r\n                            price:'2.99',\r\n                            description:'A delectable, semi-sweet New York Style Cheese Cake, with Graham cracker crust and spiced with Indian cardamoms',\r\n                            \r\n                            },\r\n                            {\r\n                                id: 9,\r\n                                name:'Alienation',\r\n                                image: 'images/Alienation.jpeg',\r\n                                category: 'dessert',\r\n                                label:'',\r\n                                price:'2.99',\r\n                                description:'A delectable, semi-sweet New York Style Cheese Cake, with Graham cracker crust and spiced with Indian cardamoms',\r\n                                \r\n                                }\r\n    ];","import React from 'react'\r\nimport './Searchbox-styles.css'\r\n\r\nexport const SearchBox =({placeholder,handleChange})=>(\r\n\r\n    <input\r\n    className=\"search\" \r\n    type=\"search\" \r\n    placeholder={placeholder}\r\n     onChange={handleChange}/>\r\n)\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport SimpleImageSlider from \"react-simple-image-slider\";\r\n\r\nexport class SlideChangeHooks extends React.Component {\r\n    render() {\r\n        const images = [\r\n            { url: \"images/cafe.jpeg\" },\r\n            { url: \"images/Landscape.jpeg\" },\r\n            { url: \"images/cafe3.jpeg\" },\r\n            {url:\"images/jungle&NorthStar.jpeg\"},\r\n            {url:\"images/images/Alienation.jpeg\"},\r\n\r\n        ];\r\n\r\n        return (\r\n<diV style={{width: 595,\r\ndisplay: \"grid\",\r\nposition: \"relative\",\r\nleft: 393,\r\ntop: -10,\r\nborder: \"solid\",\r\nheight: 447}}>\r\n            \r\n                <SimpleImageSlider\r\n                   width={'100%'}\r\n                   height={'100%'}\r\n                    images={images}\r\n                    \r\n                    \r\n                />\r\n            </diV>\r\n        );\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport '../App.css';\r\nimport {Cardslist} from '../Components/Card-list/card-list'\r\nimport {DISHES} from '../Components/Card-list/Shared/Dish'\r\n\r\nimport {SearchBox} from '../../src/Components/SearchBox/Search-Box'\r\n\r\nimport{SlideChangeHooks} from '../Components/SLiderComponent/Slider'\r\n\r\n\r\n export default class  Home extends Component{\r\n    constructor(){\r\n      super();\r\n      this.state={\r\n        monsters:DISHES,\r\n        searchField:''\r\n      };\r\n    }\r\n    \r\n    \r\n      render(){\r\n    const {monsters,searchField}   =this.state;\r\n    \r\n    const filtermonster= monsters.filter(monster =>\r\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\r\n      )\r\n      \r\n      return (\r\n        <div className=\"App\">\r\n    < SearchBox placeholder=\"search \"\r\n     handleChange={e=> this.setState({searchField:e.target.value})}/>\r\n     <SlideChangeHooks/>\r\n          <Cardslist monsters={filtermonster}  />\r\n        \r\n        </div>\r\n      );\r\n    }\r\n    }\r\n    \r\n      \r\n    ","import React,{Component} from 'react';\r\n\r\nfunction ContactUs(){\r\n    return(\r\n        <div>\r\n            <h1> Conatct us</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactUs;","import React,{Component} from 'react';\nimport './App.css';\n\n import { Navigation } from './Pages/Navigation.js'\n import Home from './Pages/Home'\n import ContactUs from './Pages/ContactUS'\n\n import {BrowserRouter as Router,Switch,Route}  from 'react-router-dom'\nclass  App extends Component{\nconstructor(){\n  super();\n}\n  render(){\n  return (\n    <Router>\n    <div className=\"App\">\n      <Navigation />\n      <Switch>\n        <Route path=\"/\" exact component={Home}/>\n        <Route path=\"/ContactUs\" component={ContactUs}/>\n        \n      </Switch>\n    </div>\n    </Router>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}